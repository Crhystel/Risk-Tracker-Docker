services:
  #--- Servicio de la Base de Datos (PostgreSQL) ---
  kong-db:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - kong-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    volumes:
      - kong_db_data:/var/lib/postgresql/data

  #--- Servicio de gestor de colas RabbitMQ ---
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-riskTracker
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - kong-net
    ports:
      - "5672:5672"   # Puerto para conexiones AMQP
      - "15672:15672" # Puerto para la interfaz de gestión
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  #--- Servicio para preparar la Base de Datos de Kong (Migración) ---
  kong-migrations:
    image: kong:${KONG_VERSION:-3.5}
    container_name: kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${POSTGRES_USER}
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
      KONG_PASSWORD: ${KONG_ADMIN_PASSWORD}
      KONG_PG_DATABASE: ${POSTGRES_DB}
    depends_on:
      kong-db:
        condition: service_healthy
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure

  #--- Servicio Principal de Kong Gateway ---
  kong-gateway:
    image: kong:${KONG_VERSION:-3.5}
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: ${POSTGRES_DB}
      KONG_PG_USER: ${POSTGRES_USER}
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PASSWORD: ${KONG_ADMIN_PASSWORD}
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
    networks:
      - kong-net
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
      - "8002:8002"
      - "8444:8444" 
    healthcheck:
      test: ["CMD-SHELL", "kong health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  kong-net:
    driver: bridge

volumes:
  kong_db_data: {} 
  
  rabbitmq_data: {}